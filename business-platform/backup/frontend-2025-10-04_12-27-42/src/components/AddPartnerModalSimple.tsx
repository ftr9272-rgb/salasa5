import React, { useState } from 'react';
import { X, Users, Building, Phone, Mail, MapPin } from 'lucide-react';
import Modal from './Modal';
import toast from 'react-hot-toast';

interface AddPartnerModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSubmit: (partnerData: any) => void;
}

const AddPartnerModalSimple: React.FC<AddPartnerModalProps> = ({ isOpen, onClose, onSubmit }) => {
  const [formData, setFormData] = useState({
    businessName: '',
    contactPerson: '',
    partnerType: '',
    category: '',
    email: '',
    phone: '',
    city: ''
  });

  const partnerTypes = ['ุชุงุฌุฑ ุชุฌุฒุฆุฉ', 'ุชุงุฌุฑ ุฌููุฉ', 'ุดุฑูุฉ ุดุญู', 'ููุฑุฏ', 'ูุตูุน'];
  
  const categories = [
    'ุฅููุชุฑูููุงุช',
    'ููุงุจุณ ูุฃุฒูุงุก',
    'ููุฒู ููุทุจุฎ',
    'ุตุญุฉ ูุฌูุงู',
    'ุฃุบุฐูุฉ ููุดุฑูุจุงุช',
    'ุฑูุงุถุฉ ูููุงูุฉ',
    'ููุงุฏ ุจูุงุก',
    'ุฎุฏูุงุช ุดุญู',
    'ุฃุฎุฑู'
  ];

  const cities = [
    'ุงูุฑูุงุถ', 'ุฌุฏุฉ', 'ุงูุฏูุงู', 'ููุฉ ุงูููุฑูุฉ', 'ุงููุฏููุฉ ุงููููุฑุฉ',
    'ุงูุฃุญุณุงุก', 'ุงูุทุงุฆู', 'ุจุฑูุฏุฉ', 'ุชุจูู', 'ุฎููุณ ูุดูุท'
  ];

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    // ุงูุชุญูู ูู ุงููุฏุฎูุงุช
    if (!formData.businessName.trim()) {
      toast.error('ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณู ุงูุดุฑูุฉ');
      return;
    }

    if (!formData.contactPerson.trim()) {
      toast.error('ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณู ุงูุดุฎุต ุงููุณุคูู');
      return;
    }

    if (!formData.partnerType) {
      toast.error('ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ููุน ุงูุดุฑูู');
      return;
    }

    if (!formData.phone.trim()) {
      toast.error('ุงูุฑุฌุงุก ุฅุฏุฎุงู ุฑูู ุงููุงุชู');
      return;
    }

    if (!formData.city) {
      toast.error('ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุงููุฏููุฉ');
      return;
    }

    // ุฅุฑุณุงู ุงูุจูุงูุงุช
    onSubmit(formData);
    
    // ุฅุนุงุฏุฉ ุชุนููู ุงููููุฐุฌ
    setFormData({
      businessName: '',
      contactPerson: '',
      partnerType: '',
      category: '',
      email: '',
      phone: '',
      city: ''
    });

    toast.success('โ ุชู ุฅุถุงูุฉ ุงูุดุฑูู ุจูุฌุงุญ!');
    onClose();
  };

  return (
    <Modal
      isOpen={isOpen}
      onClose={onClose}
      title="๐ค ุฅุถุงูุฉ ุดุฑูู ุฌุฏูุฏ"
      size="md"
    >
      <form onSubmit={handleSubmit} className="space-y-4">
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
          <p className="text-blue-800 text-sm">
            ุฃุฏุฎู ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ ููุดุฑูู ุงูุฌุฏูุฏ
          </p>
        </div>

        {/* ุงุณู ุงูุดุฑูุฉ */}
        <div>
          <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
            <Building className="w-4 h-4" />
            ุงุณู ุงูุดุฑูุฉ *
          </label>
          <input
            type="text"
            name="businessName"
            value={formData.businessName}
            onChange={handleChange}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            placeholder="ุดุฑูุฉ ุงูููุชุฌุงุช ุงููุทููุฉ"
          />
        </div>

        {/* ุงูุดุฎุต ุงููุณุคูู */}
        <div>
          <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
            <Users className="w-4 h-4" />
            ุงูุดุฎุต ุงููุณุคูู *
          </label>
          <input
            type="text"
            name="contactPerson"
            value={formData.contactPerson}
            onChange={handleChange}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            placeholder="ุฃุญูุฏ ูุญูุฏ"
          />
        </div>

        {/* ููุน ุงูุดุฑูู */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            ููุน ุงูุดุฑูู *
          </label>
          <select
            name="partnerType"
            value={formData.partnerType}
            onChange={handleChange}
            required
            aria-label="ููุน ุงูุดุฑูู"
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
          >
            <option value="">-- ุงุฎุชุฑ ููุน ุงูุดุฑูู --</option>
            {partnerTypes.map(type => (
              <option key={type} value={type}>{type}</option>
            ))}
          </select>
        </div>

        {/* ุงููุฆุฉ */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            ูุฆุฉ ุงููุดุงุท
          </label>
          <select
            name="category"
            value={formData.category}
            onChange={handleChange}
            aria-label="ูุฆุฉ ุงููุดุงุท"
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
          >
            <option value="">-- ุงุฎุชุฑ ุงููุฆุฉ --</option>
            {categories.map(cat => (
              <option key={cat} value={cat}>{cat}</option>
            ))}
          </select>
        </div>

        {/* ุฑูู ุงููุงุชู */}
        <div>
          <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
            <Phone className="w-4 h-4" />
            ุฑูู ุงููุงุชู *
          </label>
          <input
            type="tel"
            name="phone"
            value={formData.phone}
            onChange={handleChange}
            required
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            placeholder="+966501234567"
          />
        </div>

        {/* ุงูุจุฑูุฏ ุงูุฅููุชุฑููู */}
        <div>
          <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
            <Mail className="w-4 h-4" />
            ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
          </label>
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
            placeholder="info@company.com"
          />
        </div>

        {/* ุงููุฏููุฉ */}
        <div>
          <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
            <MapPin className="w-4 h-4" />
            ุงููุฏููุฉ *
          </label>
          <select
            name="city"
            value={formData.city}
            onChange={handleChange}
            required
            aria-label="ุงููุฏููุฉ"
            className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
          >
            <option value="">-- ุงุฎุชุฑ ุงููุฏููุฉ --</option>
            {cities.map(city => (
              <option key={city} value={city}>{city}</option>
            ))}
          </select>
        </div>

        {/* ุงูุฃุฒุฑุงุฑ */}
        <div className="flex gap-3 justify-end pt-4 border-t">
          <button
            type="button"
            onClick={onClose}
            className="px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition"
          >
            ุฅูุบุงุก
          </button>
          <button
            type="submit"
            className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition flex items-center gap-2"
          >
            <Users className="w-4 h-4" />
            ุฅุถุงูุฉ ุงูุดุฑูู
          </button>
        </div>
      </form>
    </Modal>
  );
};

export default AddPartnerModalSimple;
