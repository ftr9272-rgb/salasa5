name: Build frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    name: Build and upload frontend dist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install
        working-directory: ./enhanced-business-platform

      - name: Build frontend
        run: pnpm build --silent
        working-directory: ./enhanced-business-platform

      - name: List build output
        run: |
          echo "Built files:" && ls -la enhanced-business-platform/dist || true

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: enhanced-business-platform/dist

  deploy:
    name: Deploy to server (optional)
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.SSH_HOST && secrets.SSH_USER && secrets.SSH_PRIVATE_KEY && secrets.SSH_TARGET_DIR }}
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync openssh-client

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Copy dist to remote
        run: |
          rsync -avz --delete ./frontend-dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_TARGET_DIR }}

      - name: Optional restart command
        if: ${{ secrets.SSH_RESTART_CMD }}
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "${{ secrets.SSH_RESTART_CMD }}"
